package tp2;

import java.util.Collection;
import java.util.Iterator;
import java.util.Set;

public class ListSet<T> implements Set<T>{
	private Node<T> head;
	private int size;
	
	@Override
	public boolean add(T value) {
		
		
		
	}
	
	@Override
	public boolean contains(Object value) {
		for(T currentValue : this)
			if (value.equals(currentValue))
				return true;
		return false;
	}

	@Override
	public boolean addAll(Collection<? extends T> arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void clear() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean containsAll(Collection<?> arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Iterator<T> iterator() {
		
		return new Iterator<T>() {
			private Node<T> current = head;
			
			@Override
			public boolean hasNext() {
				return current != null;
			}

			@Override
			public T next() {
				T value = current.value;
				current = current.next;
				return value;
			}
			
		};
	}

	@Override
	public boolean remove(Object arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean removeAll(Collection<?> arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean retainAll(Collection<?> arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Object[] toArray() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public <T> T[] toArray(T[] arg0) {
		// TODO Auto-generated method stub
		return null;
	}
	
	private static class Node<T> {
		private T value;
		private Node<T> next;
		
		public Node(T v, Node<T> n) {
			value = v;
			next = n;
		}
	}
}
